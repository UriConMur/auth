<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="SDStandard">
 <description>The SD coding standard.</description>

 <arg name="colors"/>
 <arg value="s"/>
 <exclude-pattern>*/swagger/*</exclude-pattern>

   <rule ref="PEAR">
    <exclude name="PEAR.Commenting.FileComment.Missing"/>
    <exclude name="Generic.Files.LineEndings"/>
    <exclude name="PEAR.Functions.FunctionDeclaration.BraceOnNewLine"/>
   </rule>

   <rule ref="Generic.Classes.DuplicateClassName"/>
   <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
   <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
   <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
   <rule ref="Generic.ControlStructures.InlineControlStructure"/>
   <rule ref="Generic.Files.LineEndings"/>
   <rule ref="Generic.Files.LineLength">
       <properties>
           <property name="lineLimit" value="120"/>
       </properties>
   </rule>
   <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
   <rule ref="Generic.Metrics.NestingLevel">
       <properties>
           <property name="absoluteNestingLevel" value="5"/>
       </properties>
   </rule>
   <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
   <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
   <rule ref="Generic.PHP.DeprecatedFunctions"/>
   <rule ref="Generic.PHP.DisallowShortOpenTag"/>
   <rule ref="Generic.PHP.ForbiddenFunctions"/>
   <rule ref="MySource.PHP.EvalObjectFactory"/>
   <rule ref="PEAR.Classes.ClassDeclaration"/>
   <rule ref="PEAR.NamingConventions.ValidClassName"/>
   <rule ref="PEAR.NamingConventions.ValidFunctionName"/>
   <rule ref="PEAR.NamingConventions.ValidVariableName"/>
   <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
   <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
   <rule ref="PSR2.ControlStructures.SwitchDeclaration"/>

</ruleset>
